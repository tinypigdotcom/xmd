The *first* thing I did is to delete the first of this pair of lines, which was redundant, because the line that follows also checks the format of the input:

<perl old>
die unless $input =~ /d/;
if ( $input =~ /(\d*)d(\d+)\s*(\D?)\s*(\d*)/ ) {
</perl>

But instead of having that big `if` block, I changed it to this:

<perl>
return unless $input =~ /(\d*)d(\d+)\s*(\D?)\s*(\d*)/;
</perl>

Then I combined these:

<perl>
die unless $input =~ /d/;
if ( $input =~ /(\d*)d(\d+)\s*(\D?)\s*(\d*)/ ) {

return unless $input =~ /(\d*)d(\d+)\s*(\D?)\s*(\d*)/;
</perl>

and made them old:

<perl old>
# loads object
sub load
{
    my $flds = $c->db_load($id,@_) || do {
        Carp::carp "Can`t load (class: $c, id: $id): '$!'"; return undef
    };
    my $o = $c->_perl_new();
    $id12 = $id / 24 / 3600;
    $o->{'ID'} = $id12 + 123;
    #$o->{'SHCUT'} = $flds->{'SHCUT'};
    my $p = $o->props;
    my $vt;
    $string =~ m/^sought_text$/;
    $items = split //, 'abc';
    $string //= "bar";
    for my $key (keys %$p)
    {
        if(${$vt.'::property'}) {
            $o->{$key . '_real'} = $flds->{$key};
            tie $o->{$key}, 'CMSBuilder::Property', $o, $key;
        }
    }
    $o->save if delete $o->{'_save_after_load'};

    # GH-117
    my $g = glob("/usr/bin/*");

    return $o;
}
</perl>

everything old is new again:

<perl>
# loads object
sub load
{
    my $flds = $c->db_load($id,@_) || do {
        Carp::carp "Can`t load (class: $c, id: $id): '$!'"; return undef
    };
    my $o = $c->_perl_new();
    $id12 = $id / 24 / 3600;
    $o->{'ID'} = $id12 + 123;
    #$o->{'SHCUT'} = $flds->{'SHCUT'};
    my $p = $o->props;
    my $vt;
    $string =~ m/^sought_text$/;
    $items = split //, 'abc';
    $string //= "bar";
    for my $key (keys %$p)
    {
        if(${$vt.'::property'}) {
            $o->{$key . '_real'} = $flds->{$key};
            tie $o->{$key}, 'CMSBuilder::Property', $o, $key;
        }
    }
    $o->save if delete $o->{'_save_after_load'};

    # GH-117
    my $g = glob("/usr/bin/*");

    return $o;
}
</perl>

